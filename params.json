{"name":"control-pianobar","body":"The point here is that once you set your bindings as described on\r\n**Usage** you'll be able to interact with pianobar without having\r\nfocus the terminal it's running in, which distracts you and switches\r\nfocus away from what you're doing.\r\n\r\n## What's Pianobar?\r\n\r\nIt's basically a full-of-features terminal client for Pandora.\r\n\r\nQuoting its [web page](http://6xq.net/projects/pianobar/): \r\n> Pianobar is a free/open-source, console-based client for the\r\n> personalized online radio Pandora.\r\n\r\n\r\n## Requirements\r\n\r\n - Some implementation of the `notify-send` command (included with\r\n   most distros). In Ubuntu that's the `libnotify-bin` package (but read\r\n   the **NOTES** section below for a better alternative).\r\n - `pianobar` somewhere in your $PATH. If it's not in your $PATH edit\r\n   the `$pianobar` variable inside the `control-pianobar.sh` script.\r\n - `zenity`\r\n\r\n## Usage\r\n\r\n1. Download either the zip or the tarball (from the buttons above).\r\n2. Place all contents directly inside your pianobar config folder\r\n   (defaults to `$XDG_CONFIG_HOME/pianobar`, which defaults to\r\n   `$HOME/.config/pianobar`).\r\n```bash\r\nmv control-pianobar.tar ~/.config/pianobar/\r\ncd ~/.config/pianobar/\r\ntar xf control-pianobar.tar\r\n```\r\n\t\r\n3. Make sure boths scripts are marked as executable.   \r\n4. Using your desktop environment, bind different hotkeys to calling\r\n   `control-pianobar.sh <argument>` with different arguments.\r\n   \r\nFor example, bind `Media Play/Pause` to\r\n`$HOME/.config/pianobar/control-pianobar.sh p`. Now whenever you press\r\n`Media Play/Pause` pianobar will start in the background. If you have\r\na default station set, the script just starts playing, otherwise it\r\nautomatically ask you (with a popup) which station you want. From now\r\non, pressing `Media Play/Pause` pauses and resumes the music.\r\n \r\nThe `control-pianobar.sh` script takes many different arguments. You\r\nshould bind each argument to a different media key (or just a\r\nhotkey). Running `control-pianobar.sh` with no arguments prints\r\ninstructions on usage with the following examples.\r\n\r\nBind this key => To this command:\r\n - **Media Play/Pause** => `control-pianobar.sh p;`\r\n - **Media Stop** => `control-pianobar.sh quit;`\r\n - **Media Previous** => `control-pianobar.sh history;`\r\n - **Media Next** => `control-pianobar.sh next;`\r\n - **Ctrl + Media Previous** => `control-pianobar.sh previousstation;`\r\n - **Ctrl + Media Next** => `control-pianobar.sh nextstation;`\r\n - **Browser Favorites** => `control-pianobar.sh love;`\r\n - **Browser Stop** => `control-pianobar.sh ban;`\r\n - **Browser Search** => `control-pianobar.sh explain;`\r\n - **Super + Search** => `control-pianobar.sh switchstation;`\r\n\r\n\r\n## Notes\r\n\r\nAs of this writting `libnotify-bin` provides a buggy version of the\r\nnotify-send command in Ubuntu, so some options of the command don't\r\nwork. On Ubuntu, it is recommended that you install some patched\r\nversion of the package that fixes the bug. Without this fix, you might\r\nnot get album art, and all your notification will have the same\r\nduration of 10 seconds, which gets annoying fast.\r\n\r\nFrom the date of this writting (2012) I am using a patched version\r\nfound in the\r\n[ppa:leolik/leolik](http://www.webupd8.org/2010/05/finally-easy-way-to-customize-notify.html).\r\nI take no responsibility regarding the contents of this ppa, I'm\r\nsimply stating it's the one I used.\r\n\r\n## Author and Contributors\r\n\r\n- Author and Maintainer: [Artur Malabarba](@Bruce-Connor)\r\n- Contributor: @Materdaddy\r\n","tagline":"A pair of scripts that interact with pianobar entirely through notification bubbles and hotkeys. No terminal necessary!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}